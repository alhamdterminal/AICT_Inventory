<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <title>Inventory Management Form</title>

    <style>
        .table-bordered {
            border: 1px solid;
            border-collapse: collapse;
        }

            .table-bordered th, .table-bordered td {
                border: 1px solid;
                padding: 8px;
                text-align: left;
            }

        .form-control {
            border: 1px solid #ced4da;
        }

        .no-border {
            border: none;
            background-color: transparent;
            box-shadow: none;
        }

        .employee-details td, .employee-details th {
            padding: 2px 5px;
            vertical-align: middle;
        }

        .btn-container {
            text-align: right;
            margin-top: 20px;
        }

        #select-all-cell {
            text-align: left;
            padding-left: 10px;
        }
    </style>
</head>

<body>

    <div class="container mt-5">
        <div class="form-container">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-primary">Approval Requisition Form</h3>
                </div>

                @if (Model.Requisition != null)
                {
                    <div class="card-body employee-details">
                        <table class="table table-bordered">
                            <tr>
                                <th style="width:15%;">Employee Code:</th>
                                <td><input style="outline:none;" type="text" class="no-border" id="employeeCode" value="@Model.Requisition.EmployeeCode" readonly></td>
                                <th style="width:15%;">Employee Name:</th>
                                <td><input style="outline:none;" type="text" class="no-border" id="employeeName" value="@Model.Requisition.EmployeeName" readonly></td>
                                <th style="width:15%;">Requisition Date:</th>
                                <td>
                                    <span class="no-border" id="requisitionDateDisplay">
                                        @(Model.Requisition.RequisitionDate?.ToString("dd-MM-yyyy") ?? "N/A")
                                    </span>
                                </td>
                            </tr>
                            <tr>
                                <th style="width:15%;">Requisition Code:</th>
                                <td><input type="text" class="no-border" id="requisitioncode" value="@Model.Requisition.RequisitionCode" readonly></td>
                                <th style="width:15%;">Department:</th>
                                <td><input type="text" class="no-border" id="employeeDept" value="@Model.Requisition.Department" readonly></td>
                                <th style="width:20%;">Requisition Deadline:</th>
                                <td>
                                    <span class="no-border" id="requisitionDeadlineDisplay">
                                        @(Model.Requisition.RequisitionDeadline?.ToString("dd-MM-yyyy") ?? "N/A")
                                    </span>
                                </td>
                            </tr>
                        </table>
                    </div>
                }

                <!-- Product Tab Section -->
                <div class="card-body">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="product-tab" data-toggle="tab" href="#product" role="tab" aria-controls="product" aria-selected="true">Product</a>
                        </li>
                    </ul>

                    <div class="tab-content mt-3" id="myTabContent">
                        <!-- Product Tab Content -->
                        <div class="tab-pane fade show active" id="product" role="tabpanel" aria-labelledby="product-tab">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th id="select-all-cell" style="width: 10%; text-align:left;">
                                            <input type="checkbox" id="selectAllCheckbox"> Select All
                                        </th>
                                        <th>Product Code</th>
                                        <th>Product Name</th>
                                        <th>Required Quantity</th>
                                        <th>Purpose</th>
                                    </tr>
                                </thead>
                                <tbody id="product-table-body">
                                    @foreach (var item in Model.RequisitionItems)
                                    {
                                        <tr class="product-row" id="row_@item.Id">
                                            <td class="checkbox-cell">
                                                <input type="checkbox" class="select-checkbox" id="checkbox_@item.Id">
                                            </td>
                                            <td><input type="text" class="form-control" id="ItemCode@item.ItemId" value="@item.ItemCode" readonly></td>
                                            <td><input type="text" class="form-control" id="itemDescription_@item.Id" value="@item.ItemName" readonly></td>
                                            <td>
                                                <input type="text" class="form-control" id="QuantityMeasurement_@item.Id"
                                                       value="@item.Quantity @item.MeasurementUnit"
                                                       onfocus="this.value = this.value.split(' ')[0]"
                                                       onblur="this.value = this.value.trim() + ' @item.MeasurementUnit';">
                                            </td>
                                            <td><input type="text" class="form-control" id="Purpose_@item.Id" value="@item.Purpose" readonly></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="comment-section">
                        <h4>Comments</h4>
                        <textarea class="form-control" id="commentBox" placeholder="Enter your comments here..."></textarea>
                    </div>
                </div>

            </div>

            <!-- Hidden Form for Submission -->
            <form id="approvalForm" action="@Url.Action("Approve", "Home")" method="POST">
                <input type="hidden" name="RequisitionCode" id="RequisitionCode" value="@Model.Requisition.RequisitionCode">
                <input type="hidden" name="SelectedItems" id="SelectedItems">
                <input type="hidden" name="Comment" id="CommentBox">
                <input type="hidden" name="Reject" id="RejectFlag" value="false">  <!-- Hidden Reject flag input -->
                <!-- Action Buttons -->
                <div class="btn-container">
                    <button type="button" class="btn btn-success" id="approveButton">Approve</button>
                    <button type="button" class="btn btn-danger" id="rejectButton">Reject</button>
                </div>
            </form>

        </div>
    </div>



     <script>

        $(document).ready(function () {

            // Handle "Select All" checkbox
            $("#selectAllCheckbox").change(function () {
                var isChecked = $(this).prop("checked");
                $(".select-checkbox").prop("checked", isChecked); // Select/Deselect all checkboxes
            });

            // Handle individual checkbox change (row selection)
            $(".select-checkbox").change(function () {
                var row = $(this).closest("tr");
                if ($(this).prop("checked")) {
                    row.addClass("selected");
                } else {
                    row.removeClass("selected");
                }

                // Check if all checkboxes are selected and update "Select All"
                var allChecked = $(".select-checkbox:checked").length === $(".select-checkbox").length;
                $("#selectAllCheckbox").prop("checked", allChecked);
            });

            // Handle Approve button click
            $("#approveButton").click(function () {
                var selectedItems = [];
                var comment = $("#commentBox").val();

                $(".select-checkbox:checked").each(function () {
                    var row = $(this).closest("tr");
                    var itemId = parseInt(row.attr("id").split('_')[1]);
                    var originalQuantity = parseInt($('#QuantityMeasurement_' + itemId).val().split(' ')[0]);
                    var modifiedQuantity = $('#QuantityMeasurement_' + itemId).val().split(' ')[0];
                    if (modifiedQuantity !== originalQuantity.toString()) {
                        originalQuantity = parseInt(modifiedQuantity);
                    }

                    selectedItems.push({
                        ItemId: itemId,
                        Quantity: originalQuantity
                    });
                });

                // Check if any items are selected
                if (selectedItems.length === 0) {
                    Swal.fire('Warning', 'Please select at least one item to approve.', 'warning');
                    return;
                }

                // SweetAlert confirmation before submitting
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to approve the selected items?",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Approve',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#SelectedItems").val(JSON.stringify(selectedItems));
                        $("#CommentBox").val(comment);
                        $("#RejectFlag").val("false");
                        $("#approvalForm").submit();
                        

                       
                   
                    }

                });
            });

            // Handle Reject button click
            $("#rejectButton").click(function () {
                var comment = $("#commentBox").val();

                // SweetAlert confirmation before submitting
                Swal.fire({
                    title: 'Are you sure?',
                    text: "Do you want to reject the requisition?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Reject',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#RejectFlag").val("true");
                        $("#CommentBox").val(comment);
                        $("#approvalForm").submit();
                       

                       
                    }
                });
            });

        });

    </script> 

</body>
</html>
